name: build

on: [ push ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - name: Install pipx
        run: |
          pip install --user pipx
          pipx ensurepath
      - name: Install global dependencies
        run: |
          pipx install realm==0.3.0 --python python
          pipx install poetry==1.7.1 --python python
          pipx install poethepoet --python python
          pipx install coverage --python python
      - name: Install project dependencies
        run: realm install
      - name: Lint
        run: realm task lint

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Python version
        id: py-version
        run: |
          python3 -c "import sys; print('-'.join(str(v) for v in sys.version_info))" > ~/py-ver.txt
          echo version=$(cat ~/py-ver.txt) >> $GITHUB_OUTPUT
      - name: Install pipx
        run: |
          pip install --user pipx
          pipx ensurepath
      - name: Install global dependencies
        run: |
          pipx install realm==0.3.0 --python python
          pipx install poetry==1.7.1 --python python
          pipx install poethepoet --python python
          pipx install coverage --python python
          poetry config --list
      - name: Install project dependencies
        run: realm install
      - name: Run tests
        run: realm task test
      - name: Coverage report
        run: |
          coverage combine ./*/**/.coverage || true
          coverage report || true
