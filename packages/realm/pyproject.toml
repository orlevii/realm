[tool.poetry]
name = "realm"
version = "0.3.0"
description = "A tool for managing python poetry projects"
authors = ["Or Levi <orlevi128@gmail.com>"]
license = "MIT"
readme = "README.md"
keywords = ["monorepo", "realm", "poetry"]

homepage = "https://github.com/orlevii/realm"
repository = "https://github.com/orlevii/realm"
documentation = "https://github.com/orlevii/realm"

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3 :: Only",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
]

[tool.poetry.dependencies]
python = "^3.8.1"
click = "^8.1.7"
toml = "^0.10.2"
poethepoet = { version = "<1.0.0", optional = true }
colorama = "^0.4.6"
setuptools = ">=60"

[tool.poetry.extras]
tasks = ['poethepoet']

[tool.poetry.group.dev.dependencies]
coverage = "^7.4.0"
ruff = "^0.2.0"

[tool.poetry.scripts]
realm = 'realm.cli.application:cli'

[tool.poe.tasks]
test.shell = 'coverage run --source ./src -m unittest discover -s tests -v -p "test_*.py"'
lint.shell = "ruff src tests"
format.shell = "ruff format src tests"


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".venv",
    "venv",
]
line-length = 88
indent-width = 4
target-version = "py38"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]
ignore = ["RUF012"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
